{"version":3,"sources":["constants/status.ts","constants/oidc-configs.ts","services/auth-service.ts","containers/Authorize/sagas/requests.ts","containers/Authorize/sagas/handles.ts","containers/Authorize/sagas/index.ts","redux/sagas/rootSaga.ts","redux/store.ts","components/InlineLoader.tsx","containers/Layout/SideBar.tsx","containers/Layout/index.tsx","routes/LayoutRoute.tsx","routes/index.tsx","index.tsx","services/request.ts","containers/Authorize/reducer.ts","utils/localStorage.ts","constants/pages.ts","hooks/redux.ts","constants/roles.ts","containers/Brand/reducer.ts","components/ConfirmModal.tsx","containers/Layout/Header.tsx"],"names":["Status","URL","process","CallBackEndpoints","redirect_uri","post_logout_redirect_uri","oidcSettings","authority","client_id","response_type","scope","automaticSilentRenew","includeIdTokenInSilentRenew","userManager","this","UserManager","getUser","signinRedirect","state","location","hash","url","signinRedirectCallback","signinSilent","signoutRedirect","signoutRedirectCallback","loginRequest","AuthService","loginAsync","loginCallbackRequest","completeLoginAsync","window","href","getMeRequest","getUserAsync","logoutRequest","logoutAsync","logoutCallbackRequest","completeLogoutAsync","handleLogin","handleLoginCallback","handleGetMe","handleLogout","handleLogoutCallback","call","data","put","setAccount","errorModel","response","setStatus","status","error","access_token","console","log","authorizeSagas","takeLatest","login","type","me","logout","loginCallback","logoutCallback","AuthorizeSagas","reducer","combineReducers","authReducer","brandReducer","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","rootSaga","map","saga","run","InlineLoader","useEffect","NProgress","start","done","SideBar","account","useAppSelector","className","src","alt","exact","to","HOME","profile","role","Roles","Admin","USER","BRAND","Layout","children","Header","PublicRoute","rest","fallback","Home","lazy","Login","Brand","NotFound","AuthCallback","SusspenseLoading","Routes","isAuth","dispatch","useAppDispatch","path","AUTH","component","App","configure","minimum","ROOT","document","getElementById","ReactDOM","render","config","baseURL","axios","create","accessToken","defaults","headers","common","token","key","value","localStorage","getItem","JSON","parse","err","getLocalStorage","initialState","loading","AuthSlice","createSlice","name","reducers","action","payload","serializedState","stringify","setItem","setLocalStorage","request","setAuthentication","removeItem","undefined","cleanUp","actions","EDIT_BRAND_ID","id","useDispatch","useSelector","Staff","brandReducerSlice","brands","disable","getBrands","setBrands","createBrand","updateBrand","disableBrand","setBrand","brandResult","ConfirmModal","title","isShow","onHide","Modal","show","dialogClassName","closeButton","Title","Body","CustomToggle","React","forwardRef","ref","onClick","e","preventDefault","history","useHistory","pathname","useLocation","useState","showConfirmLogout","setShowConfirmLogout","handleCancleLogout","pathnameSplit","split","shift","join","toString","headerName","Dropdown","Toggle","as","Menu","Item","push"],"mappings":"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","file":"static/js/main.2498be2c.chunk.js","sourcesContent":["import IError from \"src/interfaces/IError\";\n\nexport const Status = {\n    Success: 1,\n    Failed: 2,\n    DeleteFailed: 3,\n}\n\nexport type SetStatusType = {\n    status?: number;\n    error?: IError;\n};","export const UrlBackEnd = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const URL = process.env.REACT_APP_URL ?? \"http://localhost:3000\";\r\n\r\nexport const CallBackEndpoints = {\r\n    redirect_uri: `${URL}/authentication/login-callback`,\r\n    post_logout_redirect_uri: `${URL}/authentication/logout-callback`,\r\n};","import { User, UserManager, UserManagerSettings } from \"oidc-client\";\r\n\r\nimport { CallBackEndpoints, UrlBackEnd } from \"../constants/oidc-configs\";\r\n\r\nconst oidcSettings: UserManagerSettings = {\r\n  authority: UrlBackEnd,\r\n  client_id: \"admin\",\r\n  redirect_uri: CallBackEndpoints.redirect_uri,\r\n  post_logout_redirect_uri: CallBackEndpoints.post_logout_redirect_uri,\r\n  response_type: \"id_token token\",\r\n  scope: \"rookieshop.api openid profile offline_access\",\r\n  automaticSilentRenew: true,\r\n  includeIdTokenInSilentRenew: true,\r\n};\r\n\r\nclass AuthService {\r\n  public userManager: UserManager;\r\n\r\n  constructor() {\r\n    this.userManager = new UserManager(oidcSettings);\r\n  }\r\n\r\n  public getUserAsync(): Promise<User | null> {\r\n    return this.userManager.getUser();\r\n  }\r\n\r\n /*\r\n  public loginAsync(): Promise<User> {\r\n    return this.userManager.signinPopup();\r\n  }\r\n\r\n  public completeLoginAsync(url: string): Promise<User | undefined> {\r\n    return this.userManager.signinPopupCallback(url);\r\n  }\r\n*/\r\n \r\n  public loginAsync(): Promise<void> {\r\n    return this.userManager.signinRedirect({\r\n        state: location.hash,\r\n    });\r\n  }\r\n\r\n  public completeLoginAsync(url: string): Promise<User | undefined> {\r\n    return this.userManager.signinRedirectCallback(url);\r\n  }\r\n  \r\n  public renewTokenAsync(): Promise<User> {\r\n    return this.userManager.signinSilent();\r\n  }\r\n\r\n  /*\r\n  public logoutAsync(): Promise<void> {\r\n    return this.userManager.signoutPopup();\r\n  }\r\n\r\n  public async completeLogoutAsync(url: string): Promise<void> {\r\n    await this.userManager.signoutPopupCallback(url);\r\n  }\r\n  */\r\n  public logoutAsync(): Promise<void> {\r\n    return this.userManager.signoutRedirect();\r\n  }\r\n\r\n  public async completeLogoutAsync(url: string): Promise<void> {\r\n    await this.userManager.signoutRedirectCallback(url);\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import { AxiosResponse } from \"axios\";\nimport { User } from \"oidc-client\";\n\nimport RequestService from 'src/services/request';\nimport AuthService from 'src/services/auth-service';\nimport EndPoints from 'src/constants/endpoints';\nimport ILoginModel from \"src/interfaces/ILoginModel\";\nimport IAccount from \"src/interfaces/IAccount\";\nimport IChangePassword from \"src/interfaces/IChangePassword\";\n\n/*\nexport function loginRequest(): Promise<User> {\n    return AuthService.loginAsync();\n}\n*/\nexport function loginRequest(): Promise<void> {\n    return AuthService.loginAsync();\n}\n\nexport function loginCallbackRequest(): Promise<User | undefined> {\n    return AuthService.completeLoginAsync(window.location.href);\n}\n\nexport function getMeRequest(): Promise<User | null> {\n    return AuthService.getUserAsync();\n}\n\nexport function logoutRequest(): Promise<void> {\n    return AuthService.logoutAsync();\n}\n\nexport function logoutCallbackRequest(): Promise<void> {\n    return AuthService.completeLogoutAsync(window.location.href);\n}\n\n\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put } from \"redux-saga/effects\";\n\nimport { Status } from \"src/constants/status\";\nimport IChangePassword from \"src/interfaces/IChangePassword\";\nimport IError from \"src/interfaces/IError\";\nimport ILoginModel from \"src/interfaces/ILoginModel\";\nimport ISubmitAction from \"src/interfaces/ISubmitActions\";\n\nimport { setAccount, setStatus } from \"../reducer\";\nimport { \n    loginRequest, \n    getMeRequest, \n    logoutRequest, \n    loginCallbackRequest, \n    logoutCallbackRequest \n} from './requests';\n\nexport function* handleLogin() {\n    try {\n        const {data} = yield call(loginRequest);\n        yield put(setAccount(data));\n\n    } catch (error) {\n        const errorModel = error?.response?.data as IError;\n\n        yield put(setStatus({\n            status: Status.Failed,\n            error: errorModel,\n        }));\n    }\n}\n\nexport function* handleLoginCallback() {\n    try {\n        const data = yield call(loginCallbackRequest);\n\n        yield put(setAccount(data));\n  \n    } catch (error) {\n        const errorModel = error?.response?.data as IError;\n\n        yield put(setStatus({\n            status: Status.Failed,\n            error: errorModel,\n        }));\n    }\n  }\n\nexport function* handleGetMe() {\n    try {\n        const data = yield call(getMeRequest);\n\n        if (data?.access_token) {\n            yield put(setAccount(data));\n        }\n\n    } catch (error) {\n        console.log(error);\n        const errorModel = error?.response?.data as IError;\n\n        yield put(setStatus({\n            status: Status.Failed,\n            error: errorModel,\n        }));\n    }\n}\n\nexport function* handleLogout() {\n    try {\n        yield call(logoutRequest);\n    } catch (error) {\n        const errorModel = error?.response?.data as IError;\n\n        yield put(setStatus({\n            status: Status.Failed,\n            error: errorModel,\n        }));\n    }\n}\n\nexport function* handleLogoutCallback() {\n    try {\n        yield call(logoutCallbackRequest);\n    } catch (error) {\n        const errorModel = error?.response?.data as IError;\n\n        yield put(setStatus({\n            status: Status.Failed,\n            error: errorModel,\n        }));\n    }\n}\n\n","import { takeLatest } from 'redux-saga/effects';\n\nimport { login, me, logout, loginCallback, logoutCallback } from 'src/containers/Authorize/reducer';\nimport { \n    handleLogin, \n    handleGetMe, \n    handleLogout,\n    handleLoginCallback,\n    handleLogoutCallback\n} from 'src/containers/Authorize/sagas/handles';\n\nexport default function* authorizeSagas() {\n    yield takeLatest(login.type, handleLogin),\n    yield takeLatest(me.type, handleGetMe),\n    yield takeLatest(logout.type, handleLogout)\n    yield takeLatest(loginCallback.type, handleLoginCallback)\n    yield takeLatest(logoutCallback.type, handleLogoutCallback)\n}\n","import AuthorizeSagas from 'src/containers/Authorize/sagas';\n\nexport default [\n    AuthorizeSagas\n];\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport authReducer from 'src/containers/Authorize/reducer';\nimport brandReducer from 'src/containers/Brand/reducer';\n\nimport rootSaga from './sagas/rootSaga';\n\nconst reducer = combineReducers({\n    authReducer,\n    brandReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n    reducer,\n    middleware: [\n        ...getDefaultMiddleware({\n            thunk: false,\n            serializableCheck: false,\n        }),\n        sagaMiddleware\n    ],\n});\n\nrootSaga.map(saga => sagaMiddleware.run(saga))  // Register all sagas\n\n// sagaMiddleware.run(watcherSaga);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type RootDispatch = typeof store.dispatch;\n","import React, { useEffect } from 'react';\nimport NProgress from 'nprogress';\n\nconst InlineLoader = () => {\n  useEffect(() => {\n    NProgress.start();\n\n    return () => {\n      NProgress.done();\n    };\n  });\n\n  return <></>;\n};\n\nexport default InlineLoader;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  HOME,\n  BRAND,\n  USER,\n} from \"src/constants/pages\";\nimport Roles from \"src/constants/roles\";\nimport { useAppSelector } from \"src/hooks/redux\";\n\nconst SideBar = () => {\n  const { account } = useAppSelector(state => state.authReducer);\n\n  return (\n    <div className=\"nav-left mb-5\">\n      <img src='/images/Logo_lk.png' alt='logo' />\n      <p className=\"brand intro-x\">Admin Dashboard</p>\n\n      <NavLink className=\"navItem intro-x\" exact to={HOME}>\n        <button className=\"btnCustom\">Home</button>\n      </NavLink>\n\n      {\n        account?.profile.role === Roles.Admin && (\n          <div className=''>\n            <NavLink className=\"navItem intro-x\" to={USER}>\n              <button className=\"btnCustom\">Manage User</button>\n            </NavLink>\n            <NavLink className=\"navItem intro-x\" to={BRAND}>\n              <button className=\"btnCustom\">Manage Brand</button>\n            </NavLink>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { NotificationContainer } from 'react-notifications';\n\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <NotificationContainer />\n      <Header />\n\n      <div className=\"container-lg-min container-fluid\">\n        <div className=\"row mt-5\">\n\n          <div className=\"col-lg-2 col-md-4 col-12 mr-5\">\n            <SideBar />\n          </div>\n\n          <div className=\"col-lg-9 col-md-7 ms-5\">\n            {children}\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport InLineLoader from \"../components/InlineLoader\";\nimport Layout from \"src/containers/Layout\";\n\nexport default function PublicRoute({ children, ...rest }) {\n    return (\n        <Route {...rest}>\n            <Suspense fallback={<InLineLoader />}>\n                <Layout>\n                    {children}\n                </Layout>\n            </Suspense>\n        </Route>\n    );\n}","import React, { lazy, Suspense, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { HOME, AUTH, BRAND } from '../constants/pages';\nimport InLineLoader from \"../components/InlineLoader\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux\";\nimport LayoutRoute from \"./LayoutRoute\";\nimport Roles from \"src/constants/roles\";\nimport { me } from \"src/containers/Authorize/reducer\";\n\nconst Home = lazy(() => import('../containers/Home'));\nconst Login = lazy(() => import('../containers/Authorize'));\nconst Brand = lazy(() => import('../containers/Brand'));\nconst NotFound = lazy(() => import(\"../containers/NotFound\"));\nconst AuthCallback = lazy(() => import('../containers/Authorize/Auth'));\n\nconst SusspenseLoading = ({ children }) => (\n  <Suspense fallback={<InLineLoader />}>\n    {children}\n  </Suspense>\n);\n\nconst Routes = () => {\n  const { isAuth, account } = useAppSelector(state => state.authReducer);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(me());\n  }, []);\n\n  if (!isAuth) return (\n    <SusspenseLoading>\n      <Switch>\n        <Route exact path={HOME}>\n          <Login />\n        </Route>\n\n        <LayoutRoute path={AUTH}>\n          <AuthCallback />\n        </LayoutRoute>\n      </Switch>\n    </SusspenseLoading>\n  );\n\n  return (\n    <SusspenseLoading>\n      <Switch>\n        <LayoutRoute exact path={HOME}>\n          <Home />\n        </LayoutRoute>\n\n        <LayoutRoute path={AUTH}>\n          <AuthCallback />\n        </LayoutRoute>\n\n        <LayoutRoute path={BRAND}>\n          <Brand />\n        </LayoutRoute>\n        \n        <Route component={NotFound} />\n\n      </Switch>\n    </SusspenseLoading>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NProgress from \"nprogress\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"src/redux/store\";\nimport Routes from \"./routes\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"nprogress/nprogress.css\";\nimport \"react-notifications/lib/notifications.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./styles/App.scss\";\n\n\nNProgress.configure({ minimum: 1 });\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nconst ROOT = document.getElementById(\"root\");\nReactDOM.render(<App />, ROOT);\n","import axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\n\nconst config: AxiosRequestConfig = {\n    baseURL: '/'\n}\n\nclass RequestService {\n    public axios: AxiosInstance;\n\n    constructor() {\n        this.axios = axios.create(config);\n    }\n\n    public setAuthentication(accessToken: string) {\n        this.axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    }\n}\n\nexport default new RequestService();\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"oidc-client\";\n\nimport Roles from \"src/constants/roles\";\nimport { SetStatusType } from \"src/constants/status\";\nimport IAccount from \"src/interfaces/IAccount\";\nimport IChangePassword from \"src/interfaces/IChangePassword\";\nimport IError from \"src/interfaces/IError\";\nimport ILoginModel from \"src/interfaces/ILoginModel\";\nimport ISubmitAction from \"src/interfaces/ISubmitActions\";\nimport request from \"src/services/request\";\nimport { getLocalStorage, removeLocalStorage, setLocalStorage } from \"src/utils/localStorage\";\n\ntype AuthState = {\n    loading: boolean;\n    isAuth: boolean,\n    account?: User;\n    status?: number;\n    error?: IError;\n}\n\nconst token = getLocalStorage('token');\n\nconst initialState: AuthState = {\n    isAuth: !!token,\n    loading: false,\n};\n\nconst AuthSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setAccount: (state: AuthState, action: PayloadAction<User>): AuthState => {\n            const account = action.payload;\n            \n            if (account?.profile?.role === Roles.Admin && account?.access_token) {\n                setLocalStorage('token', account?.access_token);\n                request.setAuthentication(account?.access_token);\n                \n                return {\n                    ...state,\n                    account,\n                    isAuth: true,\n                    loading: false,\n                };\n            }\n            \n            //TODO: Handle unauthorize case for other users\n            return {\n                ...state,\n                // status: Status.Success,\n                account,\n                isAuth: true,\n                loading: false,\n            };\n        },\n        setStatus: (state: AuthState, action: PayloadAction<SetStatusType>) =>\n        {\n            const {status, error} = action.payload;\n\n            return {\n                ...state,\n                status,\n                error,\n                loading: false,\n            }\n        },\n        me: (state) => {\n            if (token) {\n                request.setAuthentication(token);\n            }\n        },\n        login: (state: AuthState) => ({\n            ...state,\n            loading: true,\n        }),\n        logout: (state: AuthState) => {\n\n            removeLocalStorage('token');\n            request.setAuthentication('')\n\n            return {\n                ...state,\n                isAuth: false,\n                account: undefined,\n                status: undefined,\n            };\n        },\n        cleanUp: (state) => ({\n            ...state,\n            loading: false,\n            status: undefined,\n            error: undefined,\n        }),\n        loginCallback: (state: AuthState) => ({\n            ...state,\n            loading: false,\n        }),\n        logoutCallback: (state: AuthState) => ({\n            ...state,\n            loading: false,\n        }),\n    }\n});\n\nexport const {\n    setAccount, login, setStatus, me, logout, cleanUp, loginCallback, logoutCallback\n} = AuthSlice.actions;\n\nexport default AuthSlice.reducer;\n","export const getLocalStorage = (key: string): string | undefined => {\n  try {\n    const value = localStorage.getItem(key);\n    if (value === null) {\n      return '';\n    }\n    return JSON.parse(value);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const setLocalStorage = (key: string, value: any) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (err) {\n  }\n};\n\nexport const removeLocalStorage = (key: string) => {\n  localStorage.removeItem(key);\n};\n","export const LOGIN = '/login';\nexport const AUTH = '/authentication/:action';\nexport const HOME = '/';\n\nexport const USER = '/user';\nexport const CREATE_USER = '/user/create';\nexport const EDIT_USER = '/user/edit/:id';\nexport const EDIT_USER_ID = (id: string | number) => `/user/edit/${id}`;\n\nexport const BRAND = '/brand';\nexport const CREATE_BRAND = '/brand/create';\nexport const EDIT_BRAND = '/brand/edit/:id';\nexport const EDIT_BRAND_ID = (id: string | number) => `/brand/edit/${id}`;\n\nexport const NOTFOUND = '/notfound';","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, RootDispatch } from '../redux/store';\n\nexport const useAppDispatch = () => useDispatch<RootDispatch>();\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","const Roles = {\n    Admin: 'Administrator',\n    Staff: 'STAFF'\n};\n\nexport default Roles;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { SetStatusType } from \"src/constants/status\";\n\nimport IError from \"src/interfaces/IError\";\nimport IPagedModel from \"src/interfaces/IPagedModel\";\nimport IQueryBrandModel from \"src/interfaces/Brand/IQueryBrandModel\";\nimport IBrand from \"src/interfaces/Brand/IBrand\";\nimport IBrandForm from \"src/interfaces/Brand/IBrandForm\";\n\ntype BrandState = {\n    loading: boolean;\n    brandResult?: IBrand;\n    brands: IPagedModel<IBrand> | null;\n    status?: number;\n    error?: IError;\n    disable: boolean;\n}\n\nexport type CreateAction = {\n    handleResult: Function,\n    formValues: IBrandForm,\n}\n\nexport type DisableAction = {\n    handleResult: Function,\n    brandId: number,\n}\n\nconst initialState: BrandState = {\n    brands: null,\n    loading: false,\n    disable: false,\n};\n\nconst brandReducerSlice = createSlice({\n    name: 'home',\n    initialState,\n    reducers: {\n        getBrands: (state, action: PayloadAction<IQueryBrandModel>): BrandState => {\n\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        setBrands: (state, action: PayloadAction<IPagedModel<IBrand>>): BrandState => {\n            const brands = action.payload;\n\n            return {\n                ...state,\n                brands,\n                loading: false,\n            }\n        },\n        createBrand: (state, action: PayloadAction<CreateAction>): BrandState => {\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        updateBrand: (state, action: PayloadAction<CreateAction>): BrandState => {\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        disableBrand: (state, action: PayloadAction<DisableAction>): BrandState => {\n            return {\n                ...state,\n                loading: true,\n            }\n        },\n        setBrand: (state, action: PayloadAction<IBrand>): BrandState => {\n            const brandResult = action.payload;\n\n            return {\n                ...state,\n                brandResult,\n                loading: false,\n            }\n        },\n        setStatus: (state, action: PayloadAction<SetStatusType>): BrandState => {\n            const { status, error } = action.payload;\n\n            return {\n                ...state,\n                status,\n                error,\n                loading: false,\n            }\n        },\n        cleanUp: (state): BrandState => ({\n            ...state,\n            loading: false,\n            brandResult: undefined,\n            status: undefined,\n            error: undefined,\n        }),\n    }\n});\n\nexport const {\n    createBrand, setBrand, setStatus, cleanUp,  getBrands, setBrands, updateBrand, disableBrand\n} = brandReducerSlice.actions;\n\nexport default brandReducerSlice.reducer;\n","import React from \"react\";\nimport { Modal } from 'react-bootstrap';\n\ntype Props = {\n    title: string,\n    isShow: boolean,\n    onHide?: Function,\n    children: React.ReactNode,\n}\n\nconst ConfirmModal: React.FC<Props> = ({ title, isShow, onHide, children }) => {\n\n    return (\n        <Modal\n            show={isShow}\n            onHide={onHide}\n            dialogClassName=\"modal-90w\"\n            aria-labelledby=\"login-modal\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"login-modal\">\n                    {title}\n                </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                {children}\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport ConfirmModal from \"src/components/ConfirmModal\";\nimport { HOME } from \"src/constants/pages\";\n\nimport { useAppDispatch, useAppSelector } from \"src/hooks/redux\";\nimport { logout } from \"../Authorize/reducer\";\n\n// eslint-disable-next-line react/display-name\nconst CustomToggle = React.forwardRef<any, any>(({ children, onClick }, ref): any => (\n  <a\n    className=\"btn btn-link dropdownButton\"\n    ref={ref as any}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children} <span>&#x25bc;</span>\n  </a>\n));\n\nconst Header = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const { account } = useAppSelector(state => state.authReducer);\n  const dispatch = useAppDispatch();\n\n  const [showModalChangePasswod, setShowModalChangePasswod] = useState(false);\n  const [showConfirmLogout, setShowConfirmLogout] = useState(false);\n\n  const headerName = () => {\n    const pathnameSplit = pathname.split('/');\n    pathnameSplit.shift();\n    return pathnameSplit.join(' > ').toString() || 'Home';\n  }\n\n  const openModal = () => {\n    setShowModalChangePasswod(true);\n  };\n\n  const handleHide = () => {\n    setShowModalChangePasswod(false);\n  }\n\n  const handleLogout = () => {\n    setShowConfirmLogout(true);\n  };\n\n  const handleCancleLogout = () => {\n    setShowConfirmLogout(false);\n  };\n\n  const handleConfirmedLogout = () => {\n    history.push(HOME);\n    dispatch(logout());\n  };\n\n  return (\n    <>\n      <div className='header align-items-center font-weight-bold'>\n        <div className=\"container-lg-min container-fluid d-flex pt-2\">\n          <p className='headText'>{`${headerName()}`}</p>\n\n          <div className='ml-auto text-white'>\n            <Dropdown>\n              <Dropdown.Toggle as={CustomToggle}>\n                {account?.profile?.name}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={handleLogout}>Logout</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n\n      <ConfirmModal\n        title=\"Are you sure\"\n        isShow={showConfirmLogout}\n        onHide={handleCancleLogout}\n      >\n        <div>\n          <div className=\"text-center\">Do you want to log out?</div>\n          <div className=\"text-center mt-3\">\n            <button className=\"btn btn-danger mr-3\" onClick={handleConfirmedLogout} type=\"button\">Log out</button>\n            <button className=\"btn btn-outline-secondary\" onClick={handleCancleLogout} type=\"button\">Cancel</button>\n          </div>\n        </div>\n      </ConfirmModal>\n    </>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}